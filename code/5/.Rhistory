# d3k2
rm(nlme_d3k2)
d3k2_model = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1,tau2){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0 + beta1*time_i + beta2*time_i^2 + beta3*time_i^3 +
beta4*ifelse(time_i-tau1>0,(time_i-tau1)^3,0) + beta5*ifelse(time_i-tau2>0,(time_i-tau2)^3,0)
)
}
nlme_d3k2 = nlme(y.spline_d3k2 ~ d3k2_model(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1=7.3,tau2=14.6),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5~1,
#random = ra2_i +ra3_i~1,
random = beta0 +ra2_i +ra3_i~1,  #random intercept works when ra1_i is sufficiently large
groups = ~ id,
start = c(18, 8,9,0.8,0.3,-0.9),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
summary(nlme_d3k2)
plot(sim.dt$y.spline_d3k2 ~ fitted(nlme_d3k2))
rm(nlme_d3k2)
d3k2_model = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1,tau2){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0 + beta1*time_i + beta2*time_i^2 + beta3*time_i^3 +
beta4*ifelse(time_i-tau1>0,(time_i-tau1)^3,0) + beta5*ifelse(time_i-tau2>0,(time_i-tau2)^3,0)
)
}
nlme_d3k2 = nlme(y.spline_d3k2 ~ d3k2_model(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1=7.3,tau2=14.6),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5~1,
#random = ra2_i +ra3_i~1,
random = beta0 +ra2_i +ra3_i~1,  #random intercept works when ra1_i is sufficiently large
groups = ~ id,
start = c(18, 8,9,0.8,0.3,-0.9),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
summary(nlme_d3k2)
d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i,tau1){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0+beta1*time_i+beta2*time_i^2+beta3*ifelse(time_i-tau1>0,(time_i-tau1)^2,0))
}
nlme_d2k1 <-nlme(y.spline_d2k1 ~ d2k1_model(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i,tau1=7.3),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3~1,
#random =  ra2_i+ra3_i~1,
random =   beta0 +ra2_i+ra3_i~1,
groups = ~ id,
start = c(18, 8,9,0.8),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
# nlme_d2k1 <- nlme(y.spline_d2k1 ~ beta0+
#                     beta1*((age-ra2_i)/exp(ra3_i))+
#                     beta2*((age-ra2_i)/exp(ra3_i))^2+
#                     beta3*ifelse((age-ra2_i)/exp(ra3_i)-7.3 > 0,((age-ra2_i)/exp(ra3_i)-7.3)^2,0),
#
#                   data = sim.dt,
#                   fixed = beta0 + beta1 + beta2 +beta3~1,
#                   random =  ra2_i+ra3_i~1,
#                   groups = ~ id,
#                   start = c(18, 8,9,0.8),
#                   control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
#                   na.action = na.omit)
summary(nlme_d2k1)
#---------------------------------- nlme (assume knots are known) --------------------------_#
source('makeDs.r')
# d1k1
rm(nlme_d1k1)
nlme_d1k1 <- nlme(y.spline_d1k1 ~  beta0+beta1*(age-ra2_i)/exp(ra3_i)+
beta2*ifelse((age-ra2_i)/exp(ra3_i)-7.3>0,(age-ra2_i)/exp(ra3_i)-7.3,0),
data = sim.dt,
fixed = beta0 + beta1 + beta2 ~1,
random = ra2_i+ra3_i~1,
groups = ~ id,
start = c(18, 8,9),
na.action = na.omit)
summary(nlme_d1k1)
plot(sim.dt$y.spline_d1k1 ~fitted(nlme_d1k1) )
# d2k1
rm(nlme_d2k1)
d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i,tau1){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0+beta1*time_i+beta2*time_i^2+beta3*ifelse(time_i-tau1>0,(time_i-tau1)^2,0))
}
nlme_d2k1 <-nlme(y.spline_d2k1 ~ d2k1_model(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i,tau1=7.3),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3~1,
#random =  ra2_i+ra3_i~1,
random =   beta0 +ra2_i+ra3_i~1,
groups = ~ id,
start = c(18, 8,9,0.8),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
# nlme_d2k1 <- nlme(y.spline_d2k1 ~ beta0+
#                     beta1*((age-ra2_i)/exp(ra3_i))+
#                     beta2*((age-ra2_i)/exp(ra3_i))^2+
#                     beta3*ifelse((age-ra2_i)/exp(ra3_i)-7.3 > 0,((age-ra2_i)/exp(ra3_i)-7.3)^2,0),
#
#                   data = sim.dt,
#                   fixed = beta0 + beta1 + beta2 +beta3~1,
#                   random =  ra2_i+ra3_i~1,
#                   groups = ~ id,
#                   start = c(18, 8,9,0.8),
#                   control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
#                   na.action = na.omit)
summary(nlme_d2k1)
plot(sim.dt$y.spline_d2k1 ~ fitted(nlme_d2k1))
# d3k2
rm(nlme_d3k2)
d3k2_model = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1,tau2){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0 + beta1*time_i + beta2*time_i^2 + beta3*time_i^3 +
beta4*ifelse(time_i-tau1>0,(time_i-tau1)^3,0) + beta5*ifelse(time_i-tau2>0,(time_i-tau2)^3,0)
)
}
nlme_d3k2 = nlme(y.spline_d3k2 ~ d3k2_model(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1=7.3,tau2=14.6),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5~1,
#random = ra2_i +ra3_i~1,
random = beta0 +ra2_i +ra3_i~1,  #random intercept works when ra1_i is sufficiently large
groups = ~ id,
start = c(18, 8,9,0.8,0.3,-0.9),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
summary(nlme_d3k2)
plot(sim.dt$y.spline_d3k2 ~ fitted(nlme_d3k2))
#---------------------------------- nlme (assume knots are known) --------------------------_#
source('makeDs.r')
# d1k1
rm(nlme_d1k1)
nlme_d1k1 <- nlme(y.spline_d1k1 ~  beta0+beta1*(age-ra2_i)/exp(ra3_i)+
beta2*ifelse((age-ra2_i)/exp(ra3_i)-7.3>0,(age-ra2_i)/exp(ra3_i)-7.3,0),
data = sim.dt,
fixed = beta0 + beta1 + beta2 ~1,
random = ra2_i+ra3_i~1,
groups = ~ id,
start = c(18, 8,9),
na.action = na.omit)
summary(nlme_d1k1)
plot(sim.dt$y.spline_d1k1 ~fitted(nlme_d1k1) )
# d2k1
rm(nlme_d2k1)
d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i,tau1){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0+beta1*time_i+beta2*time_i^2+beta3*ifelse(time_i-tau1>0,(time_i-tau1)^2,0))
}
nlme_d2k1 <-nlme(y.spline_d2k1 ~ d2k1_model(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i,tau1=7.3),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3~1,
#random =  ra2_i+ra3_i~1,
random =   beta0 +ra2_i+ra3_i~1,
groups = ~ id,
start = c(18, 8,9,0.8),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
# nlme_d2k1 <- nlme(y.spline_d2k1 ~ beta0+
#                     beta1*((age-ra2_i)/exp(ra3_i))+
#                     beta2*((age-ra2_i)/exp(ra3_i))^2+
#                     beta3*ifelse((age-ra2_i)/exp(ra3_i)-7.3 > 0,((age-ra2_i)/exp(ra3_i)-7.3)^2,0),
#
#                   data = sim.dt,
#                   fixed = beta0 + beta1 + beta2 +beta3~1,
#                   random =  ra2_i+ra3_i~1,
#                   groups = ~ id,
#                   start = c(18, 8,9,0.8),
#                   control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
#                   na.action = na.omit)
summary(nlme_d2k1)
plot(sim.dt$y.spline_d2k1 ~ fitted(nlme_d2k1))
# d3k2
rm(nlme_d3k2)
d3k2_model = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1,tau2){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0 + beta1*time_i + beta2*time_i^2 + beta3*time_i^3 +
beta4*ifelse(time_i-tau1>0,(time_i-tau1)^3,0) + beta5*ifelse(time_i-tau2>0,(time_i-tau2)^3,0)
)
}
nlme_d3k2 = nlme(y.spline_d3k2 ~ d3k2_model(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1=7.3,tau2=14.6),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5~1,
#random = ra2_i +ra3_i~1,
random = beta0 +ra2_i +ra3_i~1,  #random intercept works when ra1_i is sufficiently large
groups = ~ id,
start = c(18, 8,9,0.8,0.3,-0.9),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
summary(nlme_d3k2)
plot(sim.dt$y.spline_d3k2 ~ fitted(nlme_d3k2))
install.packages("rstan")
install.packages('brms')
library(brms)
f1 <- y.spline_d2k1 ~ beta0+
beta1*((age-ra2i)/exp(ra3i))+
beta2*((age-ra2i)/exp(ra3i))^2+
beta3*((age-ra2i)/exp(ra3i)-7.3 > 0)*((age-ra2i)/exp(ra3i)-7.3)^2
prior_1 <- c(set_prior('normal(20, 0.1)',nlpar = 'beta0'),
set_prior('normal(10, 0.1)',nlpar = 'beta1'),
set_prior('normal(7, 0.1)',nlpar = 'beta2'),
set_prior('normal(1, 0.1)',nlpar = 'beta3')
)
form = bf(f1,nl = TRUE)+list(beta0~1,beta1~1,beta2~1,beta3~1,ra2i~(1|2|id),ra3i~(1|2|id))
n1_b <- brm(form,data = sim.dt,prior = prior_1)
summary(n1_b)
save.image("C:/Users/jeffl/Desktop/New folder (2)/result.RData")
summary(n1_b)
# b-spline d2k1
rm(nlme_b_d2k1)
b_d2k1 <- function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3))
as.vector(t(matrix(rep(1,4),ncol=4) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T)))))
}
nlme_b_d2k1 <-
nlme(y.bspline_d2k1 ~ b_d2k1(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i),
data=sim.dt,
fixed = beta0 + beta1 + beta2 + beta3 ~ 1,
random = ra2_i+ ra3_i ~ 1 | id,
start = c(18, 8,9,0.5) *100     # this initial value works , however c(18, 8,9,0.5)*100 doesnot work? neither increasing m
)
source('makeDs.r')
# b-spline d2k1
rm(nlme_b_d2k1)
b_d2k1 <- function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3))
as.vector(t(matrix(rep(1,4),ncol=4) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T)))))
}
nlme_b_d2k1 <-
nlme(y.bspline_d2k1 ~ b_d2k1(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i),
data=sim.dt,
fixed = beta0 + beta1 + beta2 + beta3 ~ 1,
random = ra2_i+ ra3_i ~ 1 | id,
start = c(18, 8,9,0.5) *100     # this initial value works , however c(18, 8,9,0.5)*100 doesnot work? neither increasing m
)
summary(nlme_b_d2k1)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4,beta5))
as.vector(t(matrix(rep(1,6),ncol=6) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,
knots=c(7.3,14.6),intercept=T)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5 ~1,
random = ra2_i+ra3_i ~1,
groups = ~ id,
start = c(18,8,9,0.5,0.3,-0.7)
)
d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
beta0+
beta1*((time-ra2i)/exp(ra3i))+
beta2*((time-ra2i)/exp(ra3i))^2+
beta3*((time-ra2i)/exp(ra3i)-7.3 > 0)*((time-ra2i)/exp(ra3i)-7.3)^2
d2k1_model_g = deriv(body(d2k1_model),
namevec =c("beta0","beta1","beta2","beta3","ra2_i","ra3_i"),
function.arg = d2k1_model
)
bs_d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
as.vector(t(matrix(rep(1,4),ncol=4) %*%
t(as.matrix(cbind(beta0,beta1,beta2,beta3))*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T)))))
bs_d2k1_model_g = deriv(body(bs_d2k1_model),
namevec =c("beta0","beta1","beta2","beta3","ra2_i","ra3_i"),
function.arg = bs_d2k1_model
)
?deriv
deriv(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T))
deriv(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T),namevec =c("ra2_i","ra3_i"))
bs(1:20,knots=7.3,degree=2,intercept=T)
bs(1:20,knots=7.3,degree=2,intercept=T) %*% c(10,20,30,40)
bs_d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T) %*%  c(beta0,beta1,beta2,beta3)
bs_d2k1_model_g = deriv(body(bs_d2k1_model),
namevec =c("beta0","beta1","beta2","beta3","ra2_i","ra3_i"),
function.arg = bs_d2k1_model
)
bs(1:20,knots=7.3,degree=2,intercept=T)
c(10,20,30,40)
bs(1:20,knots=7.3,degree=2,intercept=T) %*% c(10,20,30,40)
bs(1:20,knots=7.3,degree=2,intercept=T)[1,]
bs(1:20,knots=7.3,degree=2,intercept=T)
bs(1:20,knots=7.3,degree=2,intercept=T)[1,1]
bs(1:20,knots=7.3,degree=2,intercept=T)[1,]
bs(1:20,knots=7.3,degree=2,intercept=T)[2,]
bs(1:20,knots=7.3,degree=2,intercept=T)[2,] * c(10,20,30,40)
bs(1:20,knots=7.3,degree=2,intercept=T)[1,] * c(10,20,30,40)
sum(bs(1:20,knots=7.3,degree=2,intercept=T)[1,] * c(10,20,30,40))
bs_d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
sum(bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T)[1,] *  c(beta0,beta1,beta2,beta3))
bs_d2k1_model_g = deriv(body(bs_d2k1_model),
namevec =c("beta0","beta1","beta2","beta3","ra2_i","ra3_i"),
function.arg = bs_d2k1_model
)
bs(1:20,knots=7.3,degree=2,intercept=T)[1,1] * c(10,20,30,40)
bs(1:20,knots=7.3,degree=2,intercept=T)[1,1] * c(10,20,30,40)[1]
bs(1:20,knots=7.3,degree=2,intercept=T)[1,2] * c(10,20,30,40)[2]
bs_d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T)[1,1] *c(beta0,beta1,beta2,beta3)[1] +
bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T)[1,2] *c(beta0,beta1,beta2,beta3)[2] +
bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T)[1,3] *c(beta0,beta1,beta2,beta3)[3] +
bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T)[1,4] *c(beta0,beta1,beta2,beta3)[4]
bs_d2k1_model_g = deriv(body(bs_d2k1_model),
namevec =c("beta0","beta1","beta2","beta3","ra2_i","ra3_i"),
function.arg = bs_d2k1_model
)
bs_d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
bs((time-ra2_i)/exp(ra3_i),degree=2,knots=7.3,intercept=T)[1,1] %*% c(beta0,beta1,beta2,beta3)
bs_d2k1_model_g = deriv(body(bs_d2k1_model),
namevec =c("beta0","beta1","beta2","beta3","ra2_i","ra3_i"),
function.arg = bs_d2k1_model
)
library(splines)
library(tidyverse)
library(MASS)
library(nlme)
library(lme4)
# -------------------- make data ----------------------#
makeDataset = function(n=50,m=20,seed=123,tau1=7.3,tau2=14.6) {
set.seed(seed)
# common time
time = seq(1,20,length.out = m)
# knots
#tau1 = time[ceiling(m/3)]
#tau2 = time[ceiling(m/3*2)]
# fixed effects
b0 = 20
b1 = 10
b2 = 7
b3 = 0.7
b4= 0.5
b5= -1
sim.dt =data.frame()
commom_corr = 0.3
Sigma = .1*matrix(c(1,commom_corr,commom_corr,
commom_corr,1,commom_corr,
commom_corr,commom_corr,1),
3,byrow=T)
random_effects = mvrnorm(n = n, mu = rep(0, 3), Sigma = Sigma, empirical = TRUE)
for (i in 1:n){
# random effects alpha0, beta0, beta1
r1_i = random_effects[i,1]
r2_i = random_effects[i,2]
r3_i = random_effects[i,3]
# transformed time
time_i = (time-r2_i)/exp(r3_i)
# calculate outcome:
# degree = 1, 1 knot
spline_d1k1 = b0+b1*time_i+b2*ifelse(time_i-tau1>0,time_i-tau1,0) + rnorm(n=length(time_i),mean=0,sd = 1)
bspline_d1k1 =  bs(time_i,knots = tau1,degree=1, intercept=T) %*% c(b0,b1,b2) + rnorm(n=length(time_i),mean=0,sd = 1)
# degree = 2, 1 knot
spline_d2k1 = r1_i*500+b0+b1*time_i+b2*time_i^2+b3*ifelse(time_i-tau1>0,(time_i-tau1)^2,0) + rnorm(n=length(time_i),mean=0,sd = 1)
bspline_d2k1 =  bs(time_i,knots = tau1,degree=2, intercept=T) %*% c(b0,b1,b2,b3)*100 + rnorm(n=length(time_i),mean=0,sd = 1)
# degree = 3, 2 knot2
spline_d3k2 =  r1_i*500+b0 + b1*time_i + b2*time_i^2 + b3*time_i^3 +
b4*ifelse(time_i-tau1>0,(time_i-tau1)^3,0) +
b5*ifelse(time_i-tau2>0,(time_i-tau2)^3,0) +
rnorm(n=length(time_i),mean=0,sd = 1)
bspline_d3k2 =  bs(time_i,knots = c(tau1,tau2),degree=3, intercept=T) %*% c(b0,b1,b2,b3,b4,b5)+ rnorm(n=length(time_i),mean=0,sd = 1)
# make data
dt_i=data.frame(id=i,
tau = tau1*exp(r3_i)+r2_i,
age=time ,
transformedT = time_i,
y.spline_d1k1 = spline_d1k1,
y.bspline_d1k1= bspline_d1k1,
y.spline_d2k1 = spline_d2k1,
y.bspline_d2k1 = bspline_d2k1,
y.spline_d3k2 = spline_d3k2,
y.bspline_d3k2 = bspline_d3k2
)
sim.dt = rbind(sim.dt,dt_i)
}
return(sim.dt)
}
sim.dt = makeDataset()
b_d2k1 <- function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3))
as.vector(t(matrix(rep(1,4),ncol=4) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T)))))
}
nlme_b_d2k1 <-
nlme(y.bspline_d2k1 ~ b_d2k1(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i),
data=sim.dt,
fixed = beta0 + beta1 + beta2 + beta3 ~ 1,
random = ra2_i+ ra3_i ~ 1 | id,
start = c(18, 8,9,0.5) *100     # this initial value works , however c(18, 8,9,0.5)*100 doesnot work? neither increasing m
)
summary(nlme_b_d2k1)
b_d2k1 <- function(time,beta0,beta1,beta2,beta3,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3))
as.vector(t(matrix(rep(1,4),ncol=4) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=2,
knots=7.3,intercept=T)))))
}
nlme_b_d2k1 <-
nlme(y.bspline_d2k1 ~ b_d2k1(age,beta0,beta1,beta2,beta3,ra2_i,ra3_i),
data=sim.dt,
fixed = beta0 + beta1 + beta2 + beta3 ~ 1,
random = ra2_i+ ra3_i ~ 1 | id,
start = c(18, 8,9,0.5)    # this initial value works , however c(18, 8,9,0.5)*100 doesnot work? neither increasing m
)
summary(nlme_b_d2k1)
source('makeDs.r')
#------------------------------- test nlmer ------------------------------#
# specifiy model
# d2k1_model = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
#   beta0+
#   beta1*((age-ra2i)/exp(ra3i))+
#   beta2*((age-ra2i)/exp(ra3i))^2+
#   beta3*((age-ra2i)/exp(ra3i)-7.3 > 0)*((age-ra2i)/exp(ra3i)-7.3)^2
# d2k1_model_a = function(time,beta0,beta1,beta2,beta3,ra2i,ra3i)
#   beta0+
#   beta1*((age-ra2i)/exp(ra3i))+
#   beta2*((age-ra2i)/exp(ra3i))^2+
#   beta3*((age-ra2i)/exp(ra3i)-7.3)^2
# cannot do gradient with condition ?
# if (age-ra2i)/exp(ra3i)-7.3) > 0
d2k1_model_a = ~beta0+beta1*((age-ra2i)/exp(ra3i))+beta2*((age-ra2i)/exp(ra3i))^2+beta3*((age-ra2i)/exp(ra3i)-7.3)^2
d2k1_model_g_a = deriv(d2k1_model_a,
namevec =c("beta0","beta1","beta2","beta3","ra2i","ra3i"),
function.arg = c('age',"beta0","beta1","beta2","beta3","ra2i","ra3i")
)
# if (age-ra2i)/exp(ra3i)-7.3) <= 0
d2k1_model_b = ~beta0+beta1*((age-ra2i)/exp(ra3i))+beta2*((age-ra2i)/exp(ra3i))^2
d2k1_model_g_b = deriv(d2k1_model_b,
namevec =c("beta0","beta1","beta2","beta3","ra2i","ra3i"),
function.arg = c('age',"beta0","beta1","beta2","beta3","ra2i","ra3i")
)
# run nlmer
nlmer(y.spline_d2k1 ~ ((age-ra2i)/exp(ra3i)-7.3 > 0)*d2k1_model_g_a(age,beta0,beta1,beta2,beta3,ra2i,ra3i)+
d2k1_model_g_b(age,beta0,beta1,beta2,beta3,ra2i,ra3i) ~ (ra2i+ra3i|id),
data= sim.dt,
start = c(beta0=19, beta1= 9,beta2=6 ,beta3=0.5 ,ra2i=0,ra3i=0)
)
rm(nlme_d1k1)
nlme_d1k1 <- nlme(y.spline_d1k1 ~  beta0+beta1*(age-ra2_i)/exp(ra3_i)+
beta2*ifelse((age-ra2_i)/exp(ra3_i)-7.3>0,(age-ra2_i)/exp(ra3_i)-7.3,0),
data = sim.dt,
fixed = beta0 + beta1 + beta2 ~1,
random = ra2_i+ra3_i~1,
groups = ~ id,
start = c(18, 8,9),
na.action = na.omit)
summary(nlme_d1k1)
d3k2_model = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1,tau2){
time_i = (time - ra2_i)/exp(ra3_i)
return(beta0 + beta1*time_i + beta2*time_i^2 + beta3*time_i^3 +
beta4*ifelse(time_i-tau1>0,(time_i-tau1)^3,0) + beta5*ifelse(time_i-tau2>0,(time_i-tau2)^3,0)
)
}
nlme_d3k2 = nlme(y.spline_d3k2 ~ d3k2_model(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1=7.3,tau2=14.6),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5~1,
#random = ra2_i +ra3_i~1,
random = beta0 +ra2_i +ra3_i~1,  #random intercept works when ra1_i is sufficiently large
groups = ~ id,
start = c(18, 8,9,0.8,0.3,-0.9),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
summary(nlme_d3k2)
summary(n1_b)
library(brms)
f1 <- y.spline_d2k1 ~ beta0+
beta1*((age-ra2i)/exp(ra3i))+
beta2*((age-ra2i)/exp(ra3i))^2+
beta3*((age-ra2i)/exp(ra3i)-7.3 > 0)*((age-ra2i)/exp(ra3i)-7.3)^2
prior_1 <- c(set_prior('normal(20, 0.1)',nlpar = 'beta0'),
set_prior('normal(10, 0.1)',nlpar = 'beta1'),
set_prior('normal(7, 0.1)',nlpar = 'beta2'),
set_prior('normal(1, 0.1)',nlpar = 'beta3')
)
form = bf(f1,nl = TRUE)+list(beta0~1,beta1~1,beta2~1,beta3~1,beta0~(1|2|id),ra2i~(1|2|id),ra3i~(1|2|id))
f1 <- y.spline_d2k1 ~ beta0+
beta1*((age-ra2i)/exp(ra3i))+
beta2*((age-ra2i)/exp(ra3i))^2+
beta3*((age-ra2i)/exp(ra3i)-7.3 > 0)*((age-ra2i)/exp(ra3i)-7.3)^2
prior_1 <- c(set_prior('normal(20, 0.1)',nlpar = 'beta0'),
set_prior('normal(10, 0.1)',nlpar = 'beta1'),
set_prior('normal(7, 0.1)',nlpar = 'beta2'),
set_prior('normal(1, 0.1)',nlpar = 'beta3')
)
form = bf(f1,nl = TRUE)+list(beta0~1,beta1~1,beta2~1,beta3~1,ra2i~(1|2|id),ra3i~(1|2|id))
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4,beta5))
as.vector(t(matrix(rep(1,6),ncol=6) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,
knots=c(7.3,14.6),intercept=T)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5 ~1,
random = ra2_i+ra3_i ~1,
groups = ~ id,
start = c(18,8,9,0.5,0.3,-0.7)
)
plot(sim.dt$y.bspline_d2k1 ~ fitted(nlme_b_d2k1),xlab='fitted value',ylab='observed value')  #this plot seems wrong
nlme_d3k2 = nlme(y.spline_d3k2 ~ d3k2_model(age,beta0,beta1,beta2,beta3,beta4,beta5,ra2_i,ra3_i,tau1=7.3,tau2=14.6),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4+beta5~1,
#random = ra2_i +ra3_i~1,
random = beta0 +ra2_i +ra3_i~1,  #random intercept works when ra1_i is sufficiently large
groups = ~ id,
start = c(18, 8,9,0.8,0.3,-0.9),
control = nlmeControl(pnlsTol = .01, msVerbose = TRUE),
na.action = na.omit)
summary(nlme_d3k2)
summary(n1_b)
summary(nlme_b_d2k1)
plot(sim.dt$y.bspline_d2k1 ~ fitted(nlme_b_d2k1),xlab='fitted value',ylab='observed value')  #this plot seems wrong
