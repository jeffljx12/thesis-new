msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-4),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
as.vector(ra1_i+t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 30,
msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-4),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 30,
msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-4),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 30,
msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-4),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 30,
msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 30,
msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-2),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.0001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-2),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.01,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-2),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.1,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6/bspline fit.R')
summary(nlme_b_d3k2)
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6/bspline fit.R')
summary(nlme_b_d3k2)
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6/bspline fit.R')
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6/bspline fit.R')
#Boundary.knots, intercept =F in bs function.
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
#(https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/nlmeControl.html)
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
# corr(r1,r2) is not right !
#the above code works fine even if true ra1_i = 0.
#Boundary.knots, intercept =F in bs function.
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
#(https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/nlmeControl.html)
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9),
msVerbose = TRUE)
)
summary(nlme_b_d3k2)
# corr(r1,r2) is not right !
#the above code works fine even if true ra1_i = 0.
library(splines)
library(tidyverse)
library(MASS)
library(nlme)
library(lme4)
source('curve function.r')
# -------------------- make data ----------------------#
makeDataset = function(n=50,m=20,seed=123,tau=c(7.3,14.6)) {
set.seed(seed)
# common time
time = seq(1,20,length.out = m)
# knots
#tau1 = time[ceiling(m/3)]
#tau2 = time[ceiling(m/3*2)]
# fixed effects
b0 = 20
b1 = 10
b2 = 7
b3 = 0.7
b4= 0.5
b5= -1
sim.dt =data.frame()
commom_corr = 0.5
Sigma = .1*matrix(c(1,commom_corr,commom_corr,
commom_corr,1,commom_corr,
commom_corr,commom_corr,1),
3,byrow=T)
random_effects = mvrnorm(n = n, mu = rep(0, 3), Sigma = Sigma, empirical = TRUE)
for (i in 1:n){
# random effects alpha0, beta0, beta1
r1_i = random_effects[i,1]
r2_i = random_effects[i,2]
r3_i = random_effects[i,3]
# transformed time
#time_i = (time-r2_i)/exp(r3_i)
# calculate outcome:
# degree = 3, 2 knot2
spline_d3k2 = splineCurve(time,intercept.x = r2_i,intercept.y=r1_i,speed=r3_i,
tau=tau,degree=3,beta=c(b0,b1,b2,b3),gamma=c(b4,b5),errorTerm=T)
# construct same curve using bspline
bspline_d3k2 =  bsplineCurve(time,intercept.x = r2_i,intercept.y=r1_i,speed=r3_i,
tau=tau,degree=3,beta=c(10,20,100,1000,3000),errorTerm=T)
# make data
dt_i=data.frame(id=i,
#tau = tau1*exp(r3_i)+r2_i,
age=time ,
transformedT = (time-r2_i)/exp(r3_i),
y.spline_d3k2 = spline_d3k2,
y.bspline_d3k2 = bspline_d3k2
)
sim.dt = rbind(sim.dt,dt_i)
}
return(sim.dt)
}
sim.dt = makeDataset()
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6 make bspline work/makeDT.R')
View(sim.dt)
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6 make bspline work/makeDT.R')
View(sim.dt)
#Boundary.knots, intercept =F in bs function.
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
#(https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/nlmeControl.html)
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9))
)
summary(nlme_b_d3k2)
# corr(r1,r2) is not right !
#the above code works fine even if true ra1_i = 0.
bspline = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F) %*% c(10,20,30,40,50)+rnorm(1)
# has to fit with no intercept
fit1=lm(bspline~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F))
summary(fit1)
bspline2 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T) %*% c(10,20,30,40,50)+rnorm(1)
# has to fit with no intercept
fit2=lm(bspline2~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T))
summary(fit2)
bspline2 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T) %*% c(10,20,30,40,50,60)+rnorm(1)
# has to fit with no intercept
fit2=lm(bspline2~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T))
summary(fit2)
#2 intercept in bs
bspline2 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T) %*% c(10,20,30,40,50,60)+rnorm(1)
# has to fit with no intercept in lm
fit2=lm(bspline2~0+bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T))
summary(fit2)
#2 intercept in bs
bspline2 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T) %*% c(10,20,30,40,50,60)+rnorm(1)
# has to fit with no intercept in lm
fit2=lm(bspline2~0+bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T))
summary(fit2)
bspline2 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T) %*% c(10,20,30,40,50,60)
# has to fit with no intercept in lm
fit2=lm(bspline2~0+bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T))
summary(fit2)
bspline = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F) %*% c(10,20,30,40,50)
fit1=lm(bspline~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F))
summary(fit1)
#1 no intercept in bs
bspline = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F) %*% c(10,20,30,40,50)
fit1=lm(bspline~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F))
summary(fit1)
bspline3 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F) %*% c(10,20,30,40,50)
# has to fit with no intercept in lm
fit3=lm(bspline3~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=T))
summary(fit3)
# boundary knots is important
bspline3 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F) %*% c(10,20,30,40,50)
# has to fit with no intercept in lm
fit3=lm(bspline3~bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F))
summary(fit3)
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6 make bspline work/curve function.R')
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6 make bspline work/makeDT.R')
#Boundary.knots, intercept =F in bs function.
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
#Boundary.knots = c(-20,40),
intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
#(https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/nlmeControl.html)
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9))
)
summary(nlme_b_d3k2)
# corr(r1,r2) is not right !
#the above code works fine even if true ra1_i = 0.
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6 make bspline work/curve function.R')
source('C:/Users/jeffl/Desktop/thesis git/thesis-new/code/6 make bspline work/makeDT.R')
#Boundary.knots, intercept =F in bs function.
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),
intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
#(https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/nlmeControl.html)
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9))
)
summary(nlme_b_d3k2)
# corr(r1,r2) is not right !
#the above code works fine even if true ra1_i = 0.
bspline3 = bs(1:20,degree=3,knots=c(7.3,14.6),Boundary.knots=c(-10,30),intercept=F) %*% c(10,20,30,40,50)
# has to fit with no intercept in lm
fit3=lm(bspline3~bs(1:20,degree=3,knots=c(7.3,14.6),
#Boundary.knots=c(-10,30),
intercept=F))
summary(fit3)
#Boundary.knots, intercept =F in bs function.
source('makeDT.R')
rm(nlme_b_d3k2)
b_d3k2 = function(time,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i){
splinecoefs <- as.matrix(cbind(beta0,beta1,beta2,beta3,beta4))
ra1_i+as.vector(t(matrix(rep(1,5),ncol=5) %*%
t(splinecoefs*as.matrix(bs((time-ra2_i)/exp(ra3_i),degree=3,knots=c(7.3,14.6),
Boundary.knots = c(-20,40),
intercept=F)))))
}
nlme_b_d3k2 = nlme(y.bspline_d3k2~b_d3k2(age,beta0,beta1,beta2,beta3,beta4,ra1_i,ra2_i,ra3_i),
data = sim.dt,
fixed = beta0 + beta1 + beta2 +beta3+beta4 ~1,
random = ra1_i+ ra2_i+ra3_i ~1,
groups = ~ id,
start =c(10,20,100,1000,3000)-1,
# increase # interations, reduce tolerance
#(https://stat.ethz.ch/R-manual/R-devel/library/nlme/html/nlmeControl.html)
control=nlmeControl(MaxIter = 200,
pnlsMaxIter = 50,
msMaxIter = 100,
minScale=0.001,
niterEM = 100,
tolerance=10^(-8),
pnlsTol= 10^(-3),
msTol = 10^(-9))
)
summary(nlme_b_d3k2)
# corr(r1,r2) is not right !
#the above code works fine even if true ra1_i = 0.
View(nlme_b_d3k2)
